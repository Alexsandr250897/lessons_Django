from django.contrib import adminfrom django.db.models import QuerySet, Ffrom django.db.models.functions import Upper,Lowerfrom django.contrib.auth.admin import UserAdminfrom django.utils.safestring import mark_safefrom .models import Note, Tag, User@admin.register(Note)class NoteAdmin(admin.ModelAdmin):    list_display = [        "preview_image",        "title",        "created_at",        "short_content",        "tags_function",        "user",    ]    search_fields = ["title", "content"]    date_hierarchy = "created_at"    actions = ["title_up", "title_down"]    list_filter = ["user__username", "user__email", "tags__name"]    filter_horizontal = ["tags"]    readonly_fields = ["preview_image"]    fieldsets = (        (None, {"fields": ("title", "user", "preview_image", "image", "tags")}),        ("", {"fields": ("content",)}),    )    def get_queryset(self, request):        return Note.objects.all().select_related("user").prefetch_related("tags")    @admin.action(description= "Upper")    def title_up(self, form, queryset: QuerySet[Note]):        queryset.update(title=Upper(F('title')))    @admin.action(description="Lower")    def title_down(self, form, queryset: QuerySet[Note]):        queryset.update(title=Lower(F('title')))    @admin.display(description="Содержимое")    def short_content(self, obj: Note):        return obj.content[:50] + " " + "..."    @admin.display(description="Теги")    def tags_function(self, obj: Note):        tags = list(obj.tags.all())        text = ""        for tag in tags:            text += f'<span style="color:green">{tag}</span><br/>'            return mark_safe(text)    @admin.display(description="IMG")    def preview_image(self, obj: Note):        if obj.image:            return mark_safe(f'<img src="{obj.image.url}" height="128"/>')        return "X"@admin.register(Tag)class TagAdmin(admin.ModelAdmin):    list_display = ["name"]@admin.register(User)class CustomUserAdmin(UserAdmin):    # list_display =    fieldsets = (        (None, {"fields": ("username", "password")}),        (            ("Перснальная информация"),            {"fields": ("first_name", "last_name", "email", "phone")},        ),        (            ("Права пользователя"),            {                "fields": (                    "is_active",                    "is_staff",                    "is_superuser",                    "groups",                    "user_permissions",                ),            },        ),        (("Важные даты"), {"fields": ("last_login", "date_joined")}),    )